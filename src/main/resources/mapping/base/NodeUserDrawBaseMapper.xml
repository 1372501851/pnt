<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inesv.mapper.base.NodeUserDrawBaseMapper">


    <insert id="insertNodeUserDraw"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_node_user_draw`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="totalId!=null">
                        `total_id`,
                    </if>
                    <if test="amount!=null">
                        `amount`,
                    </if>
                    <if test="totalAmount!=null">
                        `total_amount`,
                    </if>
                    <if test="fee!=null">
                        `fee`,
                    </if>
                    <if test="createtime!=null">
                        `createtime`,
                    </if>
                    <if test="updatetime!=null">
                        `updatetime`,
                    </if>
                    <if test="hash!=null">
                        `hash`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="totalId!=null">
                    #{totalId},
                </if>
                <if test="amount!=null">
                    #{amount},
                </if>
                <if test="totalAmount!=null">
                    #{totalAmount},
                </if>
                <if test="fee!=null">
                    #{fee},
                </if>
                <if test="createtime!=null">
                    #{createtime},
                </if>
                <if test="updatetime!=null">
                    #{updatetime},
                </if>
                <if test="hash!=null">
                    #{hash},
                </if>
        </trim>
        )
    </insert>




    <update id="updateNodeUserDraw">
        UPDATE `t_node_user_draw`
        SET
        <trim suffixOverrides=",">
            <if test="totalId != null">
                `total_id` = #{totalId},
            </if>
            <if test="amount != null">
                `amount` = #{amount},
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount},
            </if>
            <if test="fee != null">
                `fee` = #{fee},
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime},
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime},
            </if>
            <if test="hash != null and hash!=''">
                `hash` = #{hash},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `t_node_user_draw`
        SET
        <trim suffixOverrides=",">
        <if test="set.totalId != null">
            `total_id` = #{set.totalId},
        </if>
        <if test="set.amount != null">
            `amount` = #{set.amount},
        </if>
        <if test="set.totalAmount != null">
            `total_amount` = #{set.totalAmount},
        </if>
        <if test="set.fee != null">
            `fee` = #{set.fee},
        </if>
        <if test="set.createtime != null">
            `createtime` = #{set.createtime},
        </if>
        <if test="set.updatetime != null">
            `updatetime` = #{set.updatetime},
        </if>
        <if test="set.hash != null and set.hash!=''">
            `hash` = #{set.hash},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.totalIdList != null">
                    `total_id` in
                    <foreach collection="where.totalIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.totalIdSt !=null">
                `total_id` >= #{where.totalIdSt} and
            </if>
            <if test="where.totalIdEd!=null">
                `total_id` &lt;= #{where.totalIdEd} and
            </if>
                <if test="where.amountList != null">
                    `amount` in
                    <foreach collection="where.amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.amountSt !=null">
                `amount` >= #{where.amountSt} and
            </if>
            <if test="where.amountEd!=null">
                `amount` &lt;= #{where.amountEd} and
            </if>
                <if test="where.totalAmountList != null">
                    `total_amount` in
                    <foreach collection="where.totalAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.totalAmountSt !=null">
                `total_amount` >= #{where.totalAmountSt} and
            </if>
            <if test="where.totalAmountEd!=null">
                `total_amount` &lt;= #{where.totalAmountEd} and
            </if>
                <if test="where.feeList != null">
                    `fee` in
                    <foreach collection="where.feeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.feeSt !=null">
                `fee` >= #{where.feeSt} and
            </if>
            <if test="where.feeEd!=null">
                `fee` &lt;= #{where.feeEd} and
            </if>
                <if test="where.createtimeList != null">
                    `createtime` in
                    <foreach collection="where.createtimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createtimeSt !=null">
                `createtime` >= #{where.createtimeSt} and
            </if>
            <if test="where.createtimeEd!=null">
                `createtime` &lt;= #{where.createtimeEd} and
            </if>
                <if test="where.updatetimeList != null">
                    `updatetime` in
                    <foreach collection="where.updatetimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updatetimeSt !=null">
                `updatetime` >= #{where.updatetimeSt} and
            </if>
            <if test="where.updatetimeEd!=null">
                `updatetime` &lt;= #{where.updatetimeEd} and
            </if>
                <if test="where.hashList != null">
                    `hash` in
                    <foreach collection="where.hashList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyHash!=null and where.fuzzyHash.size()>0">
                (
                <foreach collection="where.fuzzyHash"  separator="or" item="item">
                    `Hash` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyHash!=null and where.rightFuzzyHash.size()>0">
                (
                <foreach collection="where.rightFuzzyHash"  separator="or" item="item">
                    `Hash` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="com.inesv.model.NodeUserDraw" id="NodeUserDrawMap">
        <result property="id" column="id"/>
        <result property="totalId" column="total_id"/>
        <result property="amount" column="amount"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="fee" column="fee"/>
        <result property="createtime" column="createtime"/>
        <result property="updatetime" column="updatetime"/>
        <result property="hash" column="hash"/>
    </resultMap>


    <select id="queryNodeUserDraw" resultMap="NodeUserDrawMap">
        select
        <include refid="baseResult"></include>
        from  `t_node_user_draw`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="totalId != null">
                `total_id` = #{totalId} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount} and
            </if>
            <if test="fee != null">
                `fee` = #{fee} and
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime} and
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime} and
            </if>
            <if test="hash != null and hash!=''">
                `hash` = #{hash} and
            </if>
            <if test = "(_parameter instanceof com.inesv.model.NodeUserDraw$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="totalIdList != null">
                    `total_id` in
                    <foreach collection="totalIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="totalIdSt !=null">
                    `total_id` >= #{totalIdSt} and
                </if>
                <if test="totalIdEd!=null">
                    `total_id` &lt;= #{totalIdEd} and
                </if>
                <if test="amountList != null">
                    `amount` in
                    <foreach collection="amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                <if test="totalAmountList != null">
                    `total_amount` in
                    <foreach collection="totalAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="totalAmountSt !=null">
                    `total_amount` >= #{totalAmountSt} and
                </if>
                <if test="totalAmountEd!=null">
                    `total_amount` &lt;= #{totalAmountEd} and
                </if>
                <if test="feeList != null">
                    `fee` in
                    <foreach collection="feeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="feeSt !=null">
                    `fee` >= #{feeSt} and
                </if>
                <if test="feeEd!=null">
                    `fee` &lt;= #{feeEd} and
                </if>
                <if test="createtimeList != null">
                    `createtime` in
                    <foreach collection="createtimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createtimeSt !=null">
                    `createtime` >= #{createtimeSt} and
                </if>
                <if test="createtimeEd!=null">
                    `createtime` &lt;= #{createtimeEd} and
                </if>
                <if test="updatetimeList != null">
                    `updatetime` in
                    <foreach collection="updatetimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updatetimeSt !=null">
                    `updatetime` >= #{updatetimeSt} and
                </if>
                <if test="updatetimeEd!=null">
                    `updatetime` &lt;= #{updatetimeEd} and
                </if>
                <if test="hashList != null">
                    `hash` in
                    <foreach collection="hashList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyHash!=null and fuzzyHash.size()>0">
                    (
                    <foreach collection="fuzzyHash"  separator="or" item="item">
                        `Hash` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyHash!=null and rightFuzzyHash.size()>0">
                    (
                    <foreach collection="rightFuzzyHash"  separator="or" item="item">
                        `Hash` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryNodeUserDrawLimit1" resultMap="NodeUserDrawMap">
        select
        <include refid="baseResult"></include>
        from  `t_node_user_draw`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="totalId != null">
                `total_id` = #{totalId} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount} and
            </if>
            <if test="fee != null">
                `fee` = #{fee} and
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime} and
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime} and
            </if>
            <if test="hash != null and hash!=''">
                `hash` = #{hash} and
            </if>
            <if test = "(_parameter instanceof com.inesv.model.NodeUserDraw$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="totalIdList != null">
                        `total_id` in
                        <foreach collection="totalIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="totalIdSt !=null">
                    `total_id` >= #{totalIdSt} and
                </if>
                <if test="totalIdEd!=null">
                    `total_id` &lt;= #{totalIdEd} and
                </if>
                    <if test="amountList != null">
                        `amount` in
                        <foreach collection="amountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                    <if test="totalAmountList != null">
                        `total_amount` in
                        <foreach collection="totalAmountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="totalAmountSt !=null">
                    `total_amount` >= #{totalAmountSt} and
                </if>
                <if test="totalAmountEd!=null">
                    `total_amount` &lt;= #{totalAmountEd} and
                </if>
                    <if test="feeList != null">
                        `fee` in
                        <foreach collection="feeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="feeSt !=null">
                    `fee` >= #{feeSt} and
                </if>
                <if test="feeEd!=null">
                    `fee` &lt;= #{feeEd} and
                </if>
                    <if test="createtimeList != null">
                        `createtime` in
                        <foreach collection="createtimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createtimeSt !=null">
                    `createtime` >= #{createtimeSt} and
                </if>
                <if test="createtimeEd!=null">
                    `createtime` &lt;= #{createtimeEd} and
                </if>
                    <if test="updatetimeList != null">
                        `updatetime` in
                        <foreach collection="updatetimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updatetimeSt !=null">
                    `updatetime` >= #{updatetimeSt} and
                </if>
                <if test="updatetimeEd!=null">
                    `updatetime` &lt;= #{updatetimeEd} and
                </if>
                    <if test="hashList != null">
                        `hash` in
                        <foreach collection="hashList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyHash!=null and fuzzyHash.size()>0">
                    (
                    <foreach collection="fuzzyHash"  separator="or" item="item">
                        `Hash` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyHash!=null and rightFuzzyHash.size()>0">
                    (
                    <foreach collection="rightFuzzyHash"  separator="or" item="item">
                        `Hash` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `total_id`,
        `amount`,
        `total_amount`,
        `fee`,
        `createtime`,
        `updatetime`,
        `hash`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.inesv.model.NodeUserDraw$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.totalId==true">
                        `total_id`,
                    </if>
                    <if test="fetchFields.fetchFields.amount==true">
                        `amount`,
                    </if>
                    <if test="fetchFields.fetchFields.totalAmount==true">
                        `total_amount`,
                    </if>
                    <if test="fetchFields.fetchFields.fee==true">
                        `fee`,
                    </if>
                    <if test="fetchFields.fetchFields.createtime==true">
                        `createtime`,
                    </if>
                    <if test="fetchFields.fetchFields.updatetime==true">
                        `updatetime`,
                    </if>
                    <if test="fetchFields.fetchFields.hash==true">
                        `hash`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.totalId==null">
                        `total_id`,
                    </if>
                    <if test="fetchFields.excludeFields.amount==null">
                        `amount`,
                    </if>
                    <if test="fetchFields.excludeFields.totalAmount==null">
                        `total_amount`,
                    </if>
                    <if test="fetchFields.excludeFields.fee==null">
                        `fee`,
                    </if>
                    <if test="fetchFields.excludeFields.createtime==null">
                        `createtime`,
                    </if>
                    <if test="fetchFields.excludeFields.updatetime==null">
                        `updatetime`,
                    </if>
                    <if test="fetchFields.excludeFields.hash==null">
                        `hash`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.inesv.model.NodeUserDraw$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>