<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inesv.mapper.base.NodeBaseMapper">


    <insert id="insertNode"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_node`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="name!=null">
                        `name`,
                    </if>
                    <if test="state!=null">
                        `state`,
                    </if>
                    <if test="userId!=null">
                        `user_id`,
                    </if>
                    <if test="invitationCode!=null">
                        `invitation_code`,
                    </if>
                    <if test="address!=null">
                        `address`,
                    </if>
                    <if test="pubkey!=null">
                        `pubkey`,
                    </if>
                    <if test="totalAmount!=null">
                        `total_amount`,
                    </if>
                    <if test="intoAmount!=null">
                        `into_amount`,
                    </if>
                    <if test="addressAmount!=null">
                        `address_amount`,
                    </if>
                    <if test="remark!=null">
                        `remark`,
                    </if>
                    <if test="createtime!=null">
                        `createtime`,
                    </if>
                    <if test="updatetime!=null">
                        `updatetime`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="name!=null">
                    #{name},
                </if>
                <if test="state!=null">
                    #{state},
                </if>
                <if test="userId!=null">
                    #{userId},
                </if>
                <if test="invitationCode!=null">
                    #{invitationCode},
                </if>
                <if test="address!=null">
                    #{address},
                </if>
                <if test="pubkey!=null">
                    #{pubkey},
                </if>
                <if test="totalAmount!=null">
                    #{totalAmount},
                </if>
                <if test="intoAmount!=null">
                    #{intoAmount},
                </if>
                <if test="addressAmount!=null">
                    #{addressAmount},
                </if>
                <if test="remark!=null">
                    #{remark},
                </if>
                <if test="createtime!=null">
                    #{createtime},
                </if>
                <if test="updatetime!=null">
                    #{updatetime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateNode">
        UPDATE `t_node`
        SET
        <trim suffixOverrides=",">
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="state != null">
                `state` = #{state},
            </if>
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
            <if test="invitationCode != null and invitationCode!=''">
                `invitation_code` = #{invitationCode},
            </if>
            <if test="address != null and address!=''">
                `address` = #{address},
            </if>
            <if test="pubkey != null and pubkey!=''">
                `pubkey` = #{pubkey},
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount},
            </if>
            <if test="intoAmount != null">
                `into_amount` = #{intoAmount},
            </if>
            <if test="addressAmount != null">
                `address_amount` = #{addressAmount},
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark},
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime},
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `t_node`
        SET
        <trim suffixOverrides=",">
        <if test="set.name != null and set.name!=''">
            `name` = #{set.name},
        </if>
        <if test="set.state != null">
            `state` = #{set.state},
        </if>
        <if test="set.userId != null">
            `user_id` = #{set.userId},
        </if>
        <if test="set.invitationCode != null and set.invitationCode!=''">
            `invitation_code` = #{set.invitationCode},
        </if>
        <if test="set.address != null and set.address!=''">
            `address` = #{set.address},
        </if>
        <if test="set.pubkey != null and set.pubkey!=''">
            `pubkey` = #{set.pubkey},
        </if>
        <if test="set.totalAmount != null">
            `total_amount` = #{set.totalAmount},
        </if>
        <if test="set.intoAmount != null">
            `into_amount` = #{set.intoAmount},
        </if>
        <if test="set.addressAmount != null">
            `address_amount` = #{set.addressAmount},
        </if>
        <if test="set.remark != null and set.remark!=''">
            `remark` = #{set.remark},
        </if>
        <if test="set.createtime != null">
            `createtime` = #{set.createtime},
        </if>
        <if test="set.updatetime != null">
            `updatetime` = #{set.updatetime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.nameList != null">
                    `name` in
                    <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.stateList != null">
                    `state` in
                    <foreach collection="where.stateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.stateSt !=null">
                `state` >= #{where.stateSt} and
            </if>
            <if test="where.stateEd!=null">
                `state` &lt;= #{where.stateEd} and
            </if>
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
                <if test="where.invitationCodeList != null">
                    `invitation_code` in
                    <foreach collection="where.invitationCodeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyInvitationCode!=null and where.fuzzyInvitationCode.size()>0">
                (
                <foreach collection="where.fuzzyInvitationCode"  separator="or" item="item">
                    `Invitation_code` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyInvitationCode!=null and where.rightFuzzyInvitationCode.size()>0">
                (
                <foreach collection="where.rightFuzzyInvitationCode"  separator="or" item="item">
                    `Invitation_code` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.addressList != null">
                    `address` in
                    <foreach collection="where.addressList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAddress!=null and where.fuzzyAddress.size()>0">
                (
                <foreach collection="where.fuzzyAddress"  separator="or" item="item">
                    `Address` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAddress!=null and where.rightFuzzyAddress.size()>0">
                (
                <foreach collection="where.rightFuzzyAddress"  separator="or" item="item">
                    `Address` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.pubkeyList != null">
                    `pubkey` in
                    <foreach collection="where.pubkeyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyPubkey!=null and where.fuzzyPubkey.size()>0">
                (
                <foreach collection="where.fuzzyPubkey"  separator="or" item="item">
                    `Pubkey` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyPubkey!=null and where.rightFuzzyPubkey.size()>0">
                (
                <foreach collection="where.rightFuzzyPubkey"  separator="or" item="item">
                    `Pubkey` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.totalAmountList != null">
                    `total_amount` in
                    <foreach collection="where.totalAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.totalAmountSt !=null">
                `total_amount` >= #{where.totalAmountSt} and
            </if>
            <if test="where.totalAmountEd!=null">
                `total_amount` &lt;= #{where.totalAmountEd} and
            </if>
                <if test="where.intoAmountList != null">
                    `into_amount` in
                    <foreach collection="where.intoAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.intoAmountSt !=null">
                `into_amount` >= #{where.intoAmountSt} and
            </if>
            <if test="where.intoAmountEd!=null">
                `into_amount` &lt;= #{where.intoAmountEd} and
            </if>
                <if test="where.addressAmountList != null">
                    `address_amount` in
                    <foreach collection="where.addressAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.addressAmountSt !=null">
                `address_amount` >= #{where.addressAmountSt} and
            </if>
            <if test="where.addressAmountEd!=null">
                `address_amount` &lt;= #{where.addressAmountEd} and
            </if>
                <if test="where.remarkList != null">
                    `remark` in
                    <foreach collection="where.remarkList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyRemark!=null and where.fuzzyRemark.size()>0">
                (
                <foreach collection="where.fuzzyRemark"  separator="or" item="item">
                    `Remark` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyRemark!=null and where.rightFuzzyRemark.size()>0">
                (
                <foreach collection="where.rightFuzzyRemark"  separator="or" item="item">
                    `Remark` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.createtimeList != null">
                    `createtime` in
                    <foreach collection="where.createtimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createtimeSt !=null">
                `createtime` >= #{where.createtimeSt} and
            </if>
            <if test="where.createtimeEd!=null">
                `createtime` &lt;= #{where.createtimeEd} and
            </if>
                <if test="where.updatetimeList != null">
                    `updatetime` in
                    <foreach collection="where.updatetimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updatetimeSt !=null">
                `updatetime` >= #{where.updatetimeSt} and
            </if>
            <if test="where.updatetimeEd!=null">
                `updatetime` &lt;= #{where.updatetimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.inesv.model.Node" id="NodeMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="state" column="state"/>
        <result property="userId" column="user_id"/>
        <result property="invitationCode" column="invitation_code"/>
        <result property="address" column="address"/>
        <result property="pubkey" column="pubkey"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="intoAmount" column="into_amount"/>
        <result property="addressAmount" column="address_amount"/>
        <result property="remark" column="remark"/>
        <result property="createtime" column="createtime"/>
        <result property="updatetime" column="updatetime"/>
    </resultMap>


    <select id="queryNode" resultMap="NodeMap">
        select
        <include refid="baseResult"></include>
        from  `t_node`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="state != null">
                `state` = #{state} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="invitationCode != null and invitationCode!=''">
                `invitation_code` = #{invitationCode} and
            </if>
            <if test="address != null and address!=''">
                `address` = #{address} and
            </if>
            <if test="pubkey != null and pubkey!=''">
                `pubkey` = #{pubkey} and
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount} and
            </if>
            <if test="intoAmount != null">
                `into_amount` = #{intoAmount} and
            </if>
            <if test="addressAmount != null">
                `address_amount` = #{addressAmount} and
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark} and
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime} and
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime} and
            </if>
            <if test = "(_parameter instanceof com.inesv.model.Node$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="stateList != null">
                    `state` in
                    <foreach collection="stateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="stateSt !=null">
                    `state` >= #{stateSt} and
                </if>
                <if test="stateEd!=null">
                    `state` &lt;= #{stateEd} and
                </if>
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                <if test="invitationCodeList != null">
                    `invitation_code` in
                    <foreach collection="invitationCodeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyInvitationCode!=null and fuzzyInvitationCode.size()>0">
                    (
                    <foreach collection="fuzzyInvitationCode"  separator="or" item="item">
                        `Invitation_code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyInvitationCode!=null and rightFuzzyInvitationCode.size()>0">
                    (
                    <foreach collection="rightFuzzyInvitationCode"  separator="or" item="item">
                        `Invitation_code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="addressList != null">
                    `address` in
                    <foreach collection="addressList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAddress!=null and fuzzyAddress.size()>0">
                    (
                    <foreach collection="fuzzyAddress"  separator="or" item="item">
                        `Address` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAddress!=null and rightFuzzyAddress.size()>0">
                    (
                    <foreach collection="rightFuzzyAddress"  separator="or" item="item">
                        `Address` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="pubkeyList != null">
                    `pubkey` in
                    <foreach collection="pubkeyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyPubkey!=null and fuzzyPubkey.size()>0">
                    (
                    <foreach collection="fuzzyPubkey"  separator="or" item="item">
                        `Pubkey` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPubkey!=null and rightFuzzyPubkey.size()>0">
                    (
                    <foreach collection="rightFuzzyPubkey"  separator="or" item="item">
                        `Pubkey` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="totalAmountList != null">
                    `total_amount` in
                    <foreach collection="totalAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="totalAmountSt !=null">
                    `total_amount` >= #{totalAmountSt} and
                </if>
                <if test="totalAmountEd!=null">
                    `total_amount` &lt;= #{totalAmountEd} and
                </if>
                <if test="intoAmountList != null">
                    `into_amount` in
                    <foreach collection="intoAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="intoAmountSt !=null">
                    `into_amount` >= #{intoAmountSt} and
                </if>
                <if test="intoAmountEd!=null">
                    `into_amount` &lt;= #{intoAmountEd} and
                </if>
                <if test="addressAmountList != null">
                    `address_amount` in
                    <foreach collection="addressAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="addressAmountSt !=null">
                    `address_amount` >= #{addressAmountSt} and
                </if>
                <if test="addressAmountEd!=null">
                    `address_amount` &lt;= #{addressAmountEd} and
                </if>
                <if test="remarkList != null">
                    `remark` in
                    <foreach collection="remarkList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyRemark!=null and fuzzyRemark.size()>0">
                    (
                    <foreach collection="fuzzyRemark"  separator="or" item="item">
                        `Remark` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemark!=null and rightFuzzyRemark.size()>0">
                    (
                    <foreach collection="rightFuzzyRemark"  separator="or" item="item">
                        `Remark` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="createtimeList != null">
                    `createtime` in
                    <foreach collection="createtimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createtimeSt !=null">
                    `createtime` >= #{createtimeSt} and
                </if>
                <if test="createtimeEd!=null">
                    `createtime` &lt;= #{createtimeEd} and
                </if>
                <if test="updatetimeList != null">
                    `updatetime` in
                    <foreach collection="updatetimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updatetimeSt !=null">
                    `updatetime` >= #{updatetimeSt} and
                </if>
                <if test="updatetimeEd!=null">
                    `updatetime` &lt;= #{updatetimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryNodeLimit1" resultMap="NodeMap">
        select
        <include refid="baseResult"></include>
        from  `t_node`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="state != null">
                `state` = #{state} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="invitationCode != null and invitationCode!=''">
                `invitation_code` = #{invitationCode} and
            </if>
            <if test="address != null and address!=''">
                `address` = #{address} and
            </if>
            <if test="pubkey != null and pubkey!=''">
                `pubkey` = #{pubkey} and
            </if>
            <if test="totalAmount != null">
                `total_amount` = #{totalAmount} and
            </if>
            <if test="intoAmount != null">
                `into_amount` = #{intoAmount} and
            </if>
            <if test="addressAmount != null">
                `address_amount` = #{addressAmount} and
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark} and
            </if>
            <if test="createtime != null">
                `createtime` = #{createtime} and
            </if>
            <if test="updatetime != null">
                `updatetime` = #{updatetime} and
            </if>
            <if test = "(_parameter instanceof com.inesv.model.Node$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="nameList != null">
                        `name` in
                        <foreach collection="nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="stateList != null">
                        `state` in
                        <foreach collection="stateList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="stateSt !=null">
                    `state` >= #{stateSt} and
                </if>
                <if test="stateEd!=null">
                    `state` &lt;= #{stateEd} and
                </if>
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                    <if test="invitationCodeList != null">
                        `invitation_code` in
                        <foreach collection="invitationCodeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyInvitationCode!=null and fuzzyInvitationCode.size()>0">
                    (
                    <foreach collection="fuzzyInvitationCode"  separator="or" item="item">
                        `Invitation_code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyInvitationCode!=null and rightFuzzyInvitationCode.size()>0">
                    (
                    <foreach collection="rightFuzzyInvitationCode"  separator="or" item="item">
                        `Invitation_code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="addressList != null">
                        `address` in
                        <foreach collection="addressList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAddress!=null and fuzzyAddress.size()>0">
                    (
                    <foreach collection="fuzzyAddress"  separator="or" item="item">
                        `Address` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAddress!=null and rightFuzzyAddress.size()>0">
                    (
                    <foreach collection="rightFuzzyAddress"  separator="or" item="item">
                        `Address` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="pubkeyList != null">
                        `pubkey` in
                        <foreach collection="pubkeyList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyPubkey!=null and fuzzyPubkey.size()>0">
                    (
                    <foreach collection="fuzzyPubkey"  separator="or" item="item">
                        `Pubkey` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPubkey!=null and rightFuzzyPubkey.size()>0">
                    (
                    <foreach collection="rightFuzzyPubkey"  separator="or" item="item">
                        `Pubkey` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="totalAmountList != null">
                        `total_amount` in
                        <foreach collection="totalAmountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="totalAmountSt !=null">
                    `total_amount` >= #{totalAmountSt} and
                </if>
                <if test="totalAmountEd!=null">
                    `total_amount` &lt;= #{totalAmountEd} and
                </if>
                    <if test="intoAmountList != null">
                        `into_amount` in
                        <foreach collection="intoAmountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="intoAmountSt !=null">
                    `into_amount` >= #{intoAmountSt} and
                </if>
                <if test="intoAmountEd!=null">
                    `into_amount` &lt;= #{intoAmountEd} and
                </if>
                    <if test="addressAmountList != null">
                        `address_amount` in
                        <foreach collection="addressAmountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="addressAmountSt !=null">
                    `address_amount` >= #{addressAmountSt} and
                </if>
                <if test="addressAmountEd!=null">
                    `address_amount` &lt;= #{addressAmountEd} and
                </if>
                    <if test="remarkList != null">
                        `remark` in
                        <foreach collection="remarkList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyRemark!=null and fuzzyRemark.size()>0">
                    (
                    <foreach collection="fuzzyRemark"  separator="or" item="item">
                        `Remark` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemark!=null and rightFuzzyRemark.size()>0">
                    (
                    <foreach collection="rightFuzzyRemark"  separator="or" item="item">
                        `Remark` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="createtimeList != null">
                        `createtime` in
                        <foreach collection="createtimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createtimeSt !=null">
                    `createtime` >= #{createtimeSt} and
                </if>
                <if test="createtimeEd!=null">
                    `createtime` &lt;= #{createtimeEd} and
                </if>
                    <if test="updatetimeList != null">
                        `updatetime` in
                        <foreach collection="updatetimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updatetimeSt !=null">
                    `updatetime` >= #{updatetimeSt} and
                </if>
                <if test="updatetimeEd!=null">
                    `updatetime` &lt;= #{updatetimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `name`,
        `state`,
        `user_id`,
        `invitation_code`,
        `address`,
        `pubkey`,
        `total_amount`,
        `into_amount`,
        `address_amount`,
        `remark`,
        `createtime`,
        `updatetime`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.inesv.model.Node$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.name==true">
                        `name`,
                    </if>
                    <if test="fetchFields.fetchFields.state==true">
                        `state`,
                    </if>
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.invitationCode==true">
                        `invitation_code`,
                    </if>
                    <if test="fetchFields.fetchFields.address==true">
                        `address`,
                    </if>
                    <if test="fetchFields.fetchFields.pubkey==true">
                        `pubkey`,
                    </if>
                    <if test="fetchFields.fetchFields.totalAmount==true">
                        `total_amount`,
                    </if>
                    <if test="fetchFields.fetchFields.intoAmount==true">
                        `into_amount`,
                    </if>
                    <if test="fetchFields.fetchFields.addressAmount==true">
                        `address_amount`,
                    </if>
                    <if test="fetchFields.fetchFields.remark==true">
                        `remark`,
                    </if>
                    <if test="fetchFields.fetchFields.createtime==true">
                        `createtime`,
                    </if>
                    <if test="fetchFields.fetchFields.updatetime==true">
                        `updatetime`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.name==null">
                        `name`,
                    </if>
                    <if test="fetchFields.excludeFields.state==null">
                        `state`,
                    </if>
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.invitationCode==null">
                        `invitation_code`,
                    </if>
                    <if test="fetchFields.excludeFields.address==null">
                        `address`,
                    </if>
                    <if test="fetchFields.excludeFields.pubkey==null">
                        `pubkey`,
                    </if>
                    <if test="fetchFields.excludeFields.totalAmount==null">
                        `total_amount`,
                    </if>
                    <if test="fetchFields.excludeFields.intoAmount==null">
                        `into_amount`,
                    </if>
                    <if test="fetchFields.excludeFields.addressAmount==null">
                        `address_amount`,
                    </if>
                    <if test="fetchFields.excludeFields.remark==null">
                        `remark`,
                    </if>
                    <if test="fetchFields.excludeFields.createtime==null">
                        `createtime`,
                    </if>
                    <if test="fetchFields.excludeFields.updatetime==null">
                        `updatetime`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.inesv.model.Node$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>